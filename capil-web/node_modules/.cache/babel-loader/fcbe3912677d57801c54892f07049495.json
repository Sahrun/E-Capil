{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { config } from '../config/Config';\nimport { handleResponse } from './HandleResponseSevice';\nimport axios from 'axios';\nconst currentUserSubject = new BehaviorSubject(JSON.parse());\nexport const authenticationService = {\n  register,\n  login,\n  logout,\n  currentUser: currentUserSubject.asObservable(),\n\n  get currentUserValue() {\n    return currentUserSubject.value;\n  }\n\n};\n\nfunction register(user) {\n  return axios.post(config.apiUrl + 'auth/register', user).then(handleResponse).then(respose => {}).catch(err => {\n    console.log(err);\n  });\n}\n\nfunction login(user) {\n  return axios.post(config.apiUrl + 'auth/login/', user).then(handleResponse).then(respose => {\n    if (user.rememberme) {\n      localStorage.setItem('currentUser', JSON.stringify(respose.success.token));\n    } else {\n      sessionStorage.setItem('currentUser', JSON.stringify(respose.success.token));\n    }\n\n    currentUserSubject.next(respose.success.token);\n    return respose;\n  }).catch(err => {\n    alert(\"login error\");\n    console.log(err);\n  });\n}\n\nfunction getCurrentUser() {\n  if (sessionStorage.getItem('currentUser')) {\n    return sessionStorage.getItem('currentUser');\n  } else if (localStorage.getItem('currentUser')) {\n    return localStorage.getItem('currentUser');\n  }\n\n  return;\n}\n\nfunction logout() {\n  // remove user from local storage to log user out\n  localStorage.removeItem('currentUser');\n  sessionStorage.removeItem('currentUser');\n  currentUserSubject.next(null);\n}","map":{"version":3,"sources":["C:\\Users\\Administrator\\Documents\\E-Capil\\capil-web\\src\\service\\AutenticationService.js"],"names":["BehaviorSubject","config","handleResponse","axios","currentUserSubject","JSON","parse","authenticationService","register","login","logout","currentUser","asObservable","currentUserValue","value","user","post","apiUrl","then","respose","catch","err","console","log","rememberme","localStorage","setItem","stringify","success","token","sessionStorage","next","alert","getCurrentUser","getItem","removeItem"],"mappings":"AAAA,SAASA,eAAT,QAAgC,MAAhC;AAEA,SAAQC,MAAR,QAAqB,kBAArB;AACA,SAASC,cAAT,QAA+B,wBAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,kBAAkB,GAAG,IAAIJ,eAAJ,CAAoBK,IAAI,CAACC,KAAL,EAApB,CAA3B;AAEA,OAAO,MAAMC,qBAAqB,GAAG;AACjCC,EAAAA,QADiC;AAEjCC,EAAAA,KAFiC;AAGjCC,EAAAA,MAHiC;AAIjCC,EAAAA,WAAW,EAAEP,kBAAkB,CAACQ,YAAnB,EAJoB;;AAKjC,MAAIC,gBAAJ,GAAwB;AAAE,WAAOT,kBAAkB,CAACU,KAA1B;AAAiC;;AAL1B,CAA9B;;AAQP,SAASN,QAAT,CAAkBO,IAAlB,EAAuB;AACnB,SAAOZ,KAAK,CAACa,IAAN,CAAWf,MAAM,CAACgB,MAAP,GAAc,eAAzB,EAA0CF,IAA1C,EACNG,IADM,CACDhB,cADC,EACegB,IADf,CACoBC,OAAO,IAAI,CACrC,CAFM,EAEJC,KAFI,CAEEC,GAAG,IAAI;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,GAJM,CAAP;AAKH;;AAED,SAASZ,KAAT,CAAeM,IAAf,EAAqB;AACjB,SAAOZ,KAAK,CAACa,IAAN,CAAWf,MAAM,CAACgB,MAAP,GAAc,aAAzB,EAAwCF,IAAxC,EACNG,IADM,CACDhB,cADC,EACegB,IADf,CACoBC,OAAO,IAAI;AAElC,QAAGJ,IAAI,CAACS,UAAR,EAAmB;AACfC,MAAAA,YAAY,CAACC,OAAb,CAAqB,aAArB,EAAoCrB,IAAI,CAACsB,SAAL,CAAeR,OAAO,CAACS,OAAR,CAAgBC,KAA/B,CAApC;AACH,KAFD,MAEK;AACDC,MAAAA,cAAc,CAACJ,OAAf,CAAuB,aAAvB,EAAsCrB,IAAI,CAACsB,SAAL,CAAeR,OAAO,CAACS,OAAR,CAAgBC,KAA/B,CAAtC;AACH;;AACDzB,IAAAA,kBAAkB,CAAC2B,IAAnB,CAAwBZ,OAAO,CAACS,OAAR,CAAgBC,KAAxC;AAEA,WAAOV,OAAP;AACH,GAXM,EAWJC,KAXI,CAWEC,GAAG,IAAI;AACZW,IAAAA,KAAK,CAAC,aAAD,CAAL;AACAV,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,GAdM,CAAP;AAeH;;AAED,SAASY,cAAT,GAAyB;AACrB,MAAGH,cAAc,CAACI,OAAf,CAAuB,aAAvB,CAAH,EAAyC;AACrC,WAAOJ,cAAc,CAACI,OAAf,CAAuB,aAAvB,CAAP;AACH,GAFD,MAEM,IAAGT,YAAY,CAACS,OAAb,CAAqB,aAArB,CAAH,EAAuC;AACzC,WAAOT,YAAY,CAACS,OAAb,CAAqB,aAArB,CAAP;AACH;;AACF;AACF;;AAED,SAASxB,MAAT,GAAkB;AACd;AACAe,EAAAA,YAAY,CAACU,UAAb,CAAwB,aAAxB;AACAL,EAAAA,cAAc,CAACK,UAAf,CAA0B,aAA1B;AACA/B,EAAAA,kBAAkB,CAAC2B,IAAnB,CAAwB,IAAxB;AACH","sourcesContent":["import { BehaviorSubject } from 'rxjs';\r\n\r\nimport {config} from '../config/Config';\r\nimport { handleResponse } from './HandleResponseSevice';\r\nimport axios from 'axios';\r\n\r\nconst currentUserSubject = new BehaviorSubject(JSON.parse());\r\n\r\nexport const authenticationService = {\r\n    register,\r\n    login,\r\n    logout,\r\n    currentUser: currentUserSubject.asObservable(),\r\n    get currentUserValue () { return currentUserSubject.value }\r\n};\r\n\r\nfunction register(user){\r\n    return axios.post(config.apiUrl+'auth/register', user)\r\n    .then(handleResponse).then(respose => {\r\n    }).catch(err => {\r\n        console.log(err);\r\n    });\r\n}\r\n\r\nfunction login(user) {\r\n    return axios.post(config.apiUrl+'auth/login/', user)\r\n    .then(handleResponse).then(respose => {\r\n\r\n        if(user.rememberme){\r\n            localStorage.setItem('currentUser', JSON.stringify(respose.success.token));\r\n        }else{\r\n            sessionStorage.setItem('currentUser', JSON.stringify(respose.success.token));\r\n        }\r\n        currentUserSubject.next(respose.success.token);\r\n        \r\n        return respose;\r\n    }).catch(err => {\r\n        alert(\"login error\");\r\n        console.log(err);\r\n    });\r\n}\r\n\r\nfunction getCurrentUser(){\r\n    if(sessionStorage.getItem('currentUser')){\r\n        return sessionStorage.getItem('currentUser');\r\n    }else if(localStorage.getItem('currentUser')){\r\n        return localStorage.getItem('currentUser');\r\n    }\r\n   return;\r\n}\r\n\r\nfunction logout() {\r\n    // remove user from local storage to log user out\r\n    localStorage.removeItem('currentUser');            \r\n    sessionStorage.removeItem('currentUser');\r\n    currentUserSubject.next(null);\r\n}"]},"metadata":{},"sourceType":"module"}